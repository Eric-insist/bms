<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bms.dao.OutsiderMapper">
  <resultMap id="BaseResultMap" type="com.bms.model.Outsider">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, phone, in_time, out_time, reason
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_outsider
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_outsider
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bms.model.Outsider">
    insert into t_outsider (id, name, phone, 
      in_time, out_time, reason
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{inTime,jdbcType=TIMESTAMP}, #{outTime,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bms.model.Outsider">
    insert into t_outsider
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="inTime != null">
        in_time,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="reason != null">
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bms.model.Outsider">
    update t_outsider
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bms.model.Outsider">
    update t_outsider
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      in_time = #{inTime,jdbcType=TIMESTAMP},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findAll" parameterType="com.bms.query.OutsiderQuery" resultMap="BaseResultMap">
    select * from t_outsider
    <where>
      <if test="name != null and name != ''">
        name like concat('%',#{name,jdbcType=VARCHAR},'%')
      </if>
    </where>
    order by in_time desc
    <if test="pageSize != null and pageStart != null">
      limit #{pageStart,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>
  <select id="countAll" parameterType="com.bms.query.OutsiderQuery" resultType="java.lang.Integer">
    select count(id) from t_outsider
    <where>
      <if test="name != null and name != ''">
        name like concat('%',#{name,jdbcType=VARCHAR},'%')
      </if>
    </where>
  </select>
</mapper>