# 指定日志输出级别
# log4j.rootLogger = [ level ] , appenderName, appenderName, …
# ERROR 、 WARN 、 INFO 、 DEBUG
log4j.logger.com.bms= DEBUG, stdout
log4j.logger.error=errorfile
###
#### 控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %-5p [%c{1} %L] - %m%n

##项目不能启动的时候使用
#log4j.rootLogger=DEBUG,A1
#log4j.appender.A1=org.apache.log4j.ConsoleAppender
#log4j.appender.A1.layout=org.apache.log4j.PatternLayout
#log4j.appender.A1.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss,SSS} [%t] [%c]-[%p] %m%n


# A3 RollingFileAppender
#按文件大小, 超过该大小,就重新创建一个文件
#log4j.appender.A3=org.apache.log4j.RollingFileAppender
#log4j.appender.A3.Threshold=DEBUG
#log4j.appender.A3.File=logs/BMSFile.log
#log4j.appender.A3.Append=true
#log4j.appender.A3.MaxFileSize=20MB
#log4j.appender.A3.MaxBackupIndex=7
#log4j.appender.A3.layout=org.apache.log4j.PatternLayout
#log4j.appender.A3.layout.ConversionPattern=%d [%t] %-5p [%c{1} %L] - %m%n

# root日志输出
#log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.file.file=logs/BMSApp.log
#log4j.appender.file.DatePattern='.'yyyy-MM-dd
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d [%t] %-5p [%c{1} %L] - %m%n
#log4j.appender.dailyFile.MaxFileSize=1KB
#log4j.appender.dailyFile.MaxBackupIndex = 10

# error日志输出
#log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.errorfile.file=logs/BMSError.log
#log4j.appender.errorfile.DatePattern='.'yyyy-MM-dd
#log4j.appender.errorfile.Threshold = ERROR
#log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.errorfile.layout.ConversionPattern=%d [%t] %-5p [%c{1} %L] - %m%n

# 每天产生一个日志文件(dailyFile)
#log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender
##当天的日志文件全路径
#log4j.appender.dailyFile.File=logs/BMSDaily.log
##服务器启动日志是追加，false：服务器启动后会生成日志文件把老的覆盖掉
#log4j.appender.dailyFile.Append=true
##日志文件格式
#log4j.appender.dailyFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.dailyFile.layout.ConversionPattern=%d [%t] %-5p [%c{1} %L] - %m%n
#log4j.appender.dailyFile.Threshold=DEBUG

#设置每天生成一个文件名后添加的名称,备份名称：年月日.log
# 每天生成一个日志
# log4j.appender.dailyFile.DatePattern='_'yyyy-MM-dd
# 每分钟生成一个日志
#log4j.appender.dailyFile.DatePattern='.'yyyy-MM-dd
# 每小时生成一个日志
#log4j.appender.dailyFile.DatePattern='_'yyyy-MM-dd-HH

# mybatis
log4j.logger.java.sql.ResultSet=INFO    
log4j.logger.org.apache=INFO    
log4j.logger.java.sql.Connection=DEBUG    
log4j.logger.java.sql.Statement=DEBUG    
log4j.logger.java.sql.PreparedStatement=DEBUG    

# hibernate
#log4j.logger.org.hibernate=INFO
#log4j.logger.org.hibernate.SQL=trace
#log4j.logger.org.hibernate.HQL=trace
#log4j.category.org.hibernate.type=trace
#log4j.logger.org.springframework=WARN
#log4j.logger.springfox.documentation = WARN

# druid
#log4j.logger.druid.sql=INFO
#log4j.logger.druid.sql.DataSource=info
#log4j.logger.druid.sql.Connection=info
#log4j.logger.druid.sql.Statement=info
#log4j.logger.druid.sql.ResultSet=info

#log4j.logger.com.tianyi.cg.ctcenter.dao.mysql = DEBUG
#log4j.logger.com.tianyi.cg.ctcenter.dao.oracle = DEBUG

# com.ddd下的日志输出
# log4j.appender.dddfile=org.apache.log4j.DailyRollingFileAppender
# log4j.appender.dddfile.file=logs/ebways-spot-order-my.log
# log4j.appender.dddfile.DatePattern='.'yyyy-MM-dd
# log4j.appender.dddfile.layout=org.apache.log4j.PatternLayout
# log4j.appender.dddfile.layout.ConversionPattern=%d{yyyy-MM-dd HH\:mm\:ss,SSS} %5p %c{1}\:%L ---- %m%n
